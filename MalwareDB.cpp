//---------------------------------------------------------------------------

#include <vcl.h>
#include <FireDAC.DApt.hpp>
#pragma hdrstop

#include "MalwareDB.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TMalwareBrowser *MalwareBrowser;
//---------------------------------------------------------------------------
__fastcall TMalwareBrowser::TMalwareBrowser(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------





void __fastcall TMalwareBrowser::BrowseButtonClick(TObject *Sender)
{
	 DBDisplay -> Clear();
	 String spaces = "                    ";
	 FDConnection1->DriverName = "SQLite";
	 FDConnection1->Params->Values["Database"] =  "C:\\Users\\hugh\\Documents\\Embarcadero\\Studio\\Projects\\malwaredatabase.db";
	try
	{
		FDConnection1->Open();
		TFDQuery *query;
		query = new TFDQuery(this);
		query->Connection = FDConnection1;
		query->SQL->Text = "SELECT * FROM ADWARE";
		query->Open();
		TVarRec args[1] = {"SR_Num" + spaces + "Family" + spaces + "Num_Captured_Samples"};
		//DBDisplay->Items->Add(System::UnicodeString::Format("|%25s |", args, ARRAYSIZE(args) -1));
		DBDisplay->Items->Add(System::UnicodeString::Format("| %50s |", args, ARRAYSIZE(args) -1));
			//for(int i = 0; i < ARRAYSIZE(args); i++)
		  //{
		  while(!query->Eof)
		  {
			 TVarRec arguments[1] =  { query->FieldByName("SR_Num") -> AsString + spaces + query->FieldByName("Family")->AsString + spaces + query->FieldByName("Num_Captured_Samples")->AsString };
			 //String displayquery = query->FieldByName("SR_Num") -> AsString + spaces + query->FieldByName("Family")->AsString + "\t" + query->FieldByName("Num_Captured_Samples")->AsString;
			 DBDisplay->Items->Add(System::UnicodeString::Format("| %40s |",arguments, ARRAYSIZE(arguments) - 1));
		  //DBDisplay->Items->Add(System::UnicodeString::Format("",arguments, ARRAYSIZE(arguments) - 1));
		  query->Next();
		}

		query->Close();
		FDConnection1->Close();

	}
	catch (Exception &E)
	{
		String Errormsg = E.Message;
        DBDisplay->Items->Add(Errormsg);
	}
}


//---------------------------------------------------------------------------


